---
version: "3"
services:

  gluetun:
    image: qmcgaw/gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp
      - 8388:8388/tcp
      - 8388:8388/udp
      - 8475:8475 # qbt
    volumes:
      - $APPDATA/gluetun:/gluetun
    environment:
      VPN_SERVICE_PROVIDER: private internet access
      VPN_TYPE: openvpn
      OPENVPN_USER: "${VPN_USER}"
      OPENVPN_PASSWORD: "${VPN_PASS}"
      SERVER_REGIONS: Netherlands

  plex:
    image: linuxserver/plex:1.40.2
    container_name: plex
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      VERSION: docker
    ports:
      - "32400:32400"
    volumes:
      - $APPDATA/plex:/config
      - /bucket/media:/media
      - /flash:/flash

  qbt:
    image: lscr.io/linuxserver/qbittorrent:4.6.3
    container_name: qbt
    network_mode: "service:gluetun"
    environment:
      PUID: 65534
      PGID: 1001
      UMASK: 000
      TZ: America/Chicago
      WEBUI_PORT: 8475
    volumes:
      - $APPDATA/qbt:/config
      - /flash/downloads:/downloads
      - /bucket/media/movies:/movies
      - /bucket/media/cc:/cc
      - /bucket/media/4k:/4k
      - /bucket/media/tv:/tv
      - /bucket/media/syndicated:/syndicated
      - /bucket/media/books:/books
      - /bucket/media/music:/music
      - /mnt/bulk:/bulk
      - /mnt/nvme:/nvme
    restart: unless-stopped

  deluge:
    image: linuxserver/deluge:2.1.1
    container_name: deluge
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
      VPN_ENABLED: "no"
    volumes:
      - $APPDATA/deluge:/config
      - /bucket/media/books:/downloads
    ports:
      - "8112:8112"
      - "8118:8118"
      - "58846:58846"
      - "58946:58946"

  qbt_exporter:
    image: esanchezm/prometheus-qbittorrent-exporter
    container_name: qbt_exporter
    restart: unless-stopped
    ports:
      - "8119:8119"
    environment:
      QBITTORRENT_HOST: "192.168.0.6"
      QBITTORRENT_PORT: 8475
      EXPORTER_PORT: 8119
      QBITTORRENT_USER: admin
      QBITTORRENT_PASS: "${QBITTORRENT_PASS}"
      VERIFY_WEBUI_CERTIFICATE: "false"

  sonarr:
    image: linuxserver/sonarr:4.0.1
    container_name: sonarr
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      UMASK: 000
      TZ: America/Chicago
    volumes:
      - $APPDATA/sonarr:/config
      - /bucket/media/tv:/tv
      - /flash/downloads:/downloads
    ports:
      - 7002:8989

  radarr:
    image: linuxserver/radarr:5.2.6
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      UMASK: 000
      TZ: America/Chicago
    volumes:
      - $APPDATA/radarr:/config
      - /bucket/media/movies:/movies
      - /flash/downloads:/downloads
    ports:
      - 7003:7878

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      PUID: 65534
      PGID: 1001
      TZ: America/Chicago
    volumes:
      - $APPDATA/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped

  tautulli-exporter:
    image: nwalke/tautulli_exporter
    container_name: tautulli-exporter
    environment:
      TAUTULLI_API_KEY: "${TAUTULLI_KEY}"
      TAUTULLI_URI: http://192.168.0.6:8181
    volumes:
      - $APPDATA/tautulli:/config
    ports:
      - 9487:9487
    restart: unless-stopped

  files:
    image: svenstaro/miniserve
    container_name: files
    restart: always
    environment:
      MINISERVE_PATH: /tmp
    volumes:
      - /bucket/media:/tmp/media
      - /flash/downloads:/tmp/downloads
    ports:
      - 8080:8080

  syncthing:
    image: linuxserver/syncthing:latest
    container_name: syncthing
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/syncthing:/config
      - /bucket/backup/syncthing:/data
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
  
  vhssnyder:
    image: linuxserver/emby:latest
    container_name: vhssnyder
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - vhssnyder:/config
      - /bucket/media/vhs/snyder:/data/movies
    ports:
      - 8096:8096
      - 8920:8920

  vhsbothwell:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: vhsbothwell
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - jellyfinbothwell:/config
      - /bucket/media/vhs/bothwell:/data/vhs
      # - /path/to/movies:/data/movies
    ports:
      - 8097:8096
      # - 8920:8920 #optional
      - 7360:7359/udp #optional
      - 1901:1900/udp #optional
    restart: unless-stopped
  
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    environment:
      TZ: America/Chicago
      PUID: 65534
      PGID: 1001
      UMASK_SET: 777
      serverIP: 192.168.0.6
      serverPort: 8266
      webUIPort: 8265
      internalNode: "true"
      inContainer: "true"
      ffmpegVersion: 6
      nodeName: cornelius
      # NVIDIA_DRIVER_CAPABILITIES: all
      # NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - $APPDATA/tdarr/server:/app/server
      - $APPDATA/tdarr/configs:/app/configs
      - $APPDATA/tdarr/logs:/app/logs
      - /bucket/media:/media
      # - /transcode_cache:/temp
  
  zfs-metrics:
    image: matusnovak/prometheus-zfs:latest
    restart: unless-stopped
    privileged: true
    ports:
      - 9901:9901
  
  # delegate:
  #   image: harness/delegate:24.02.82304
  #   restart: unless-stopped
  #   environment:
  #     DELEGATE_NAME: cornelius
  #     NEXT_GEN: "true"
  #     DELEGATE_TYPE: "docker"
  #     ACCOUNT_ID: wlgELJ0TTre5aZhzpt8gVA
  #     LOG_STREAMING_SERVICE_URL: https://app.harness.io/gratis/log-service/
  #     MANAGER_HOST_AND_PORT: https://app.harness.io/gratis
  #     DELEGATE_TOKEN: "NmIzZjkzOTJmNWE4MDM3MzcyYzg2YzkwNmRkMTNjZTk="

  # crafty:
  #   container_name: crafty
  #   image: registry.gitlab.com/crafty-controller/crafty-4:latest
  #   restart: always
  #   environment:
  #     - TZ=Etc/UTC
  #   ports:
  #     - "8000:8000" # HTTP
  #     - "8443:8443" # HTTPS
  #     - "8123:8123" # DYNMAP
  #     - "19132:19132/udp" # BEDROCK
  #     - "25500-25600:25500-25600" # MC SERV PORT RANGE
  #   volumes:
  #     - $APPDATA/crafty/backups:/crafty/backups
  #     - $APPDATA/crafty/logs:/crafty/logs
  #     - $APPDATA/crafty/servers:/crafty/servers
  #     - $APPDATA/crafty/config:/crafty/app/config
  #     - $APPDATA/crafty/import:/crafty/import

  # server:
  #   image: ghcr.io/dan6erbond/share-me-server:latest
  #   volumes:
  #     - $APPDATA/pb_data:/pb/pb_data
  #   ports:
  #     - 8263:8080
  # frontend:
  #   image: ghcr.io/dan6erbond/share-me-frontend:latest
  #   environment:
  #     POCKETBASE_URL: https://shareme.example.com
  #   ports:
  #     - 8263:3000

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - /bucket/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    # env_file:
    #   - .env
    environment:
      DB_HOSTNAME: immich-database
      REDIS_HOSTNAME: immich-redis
    ports:
      - '2283:2283'
    depends_on:
      - immich-redis
      - immich-database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - immich-model-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${APPDATA}/immich-db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DB_DATABASE_NAME}' --username='${IMMICH_DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      # start_interval: 30s
      start_period: 5m
    command:
      [
        'postgres',
        '-c',
        'shared_preload_libraries=vectors.so',
        '-c',
        'search_path="$$user", public, vectors',
        '-c',
        'logging_collector=on',
        '-c',
        'max_wal_size=2GB',
        '-c',
        'shared_buffers=512MB',
        '-c',
        'wal_compression=on',
      ]
    restart: always
  
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    restart: unless-stopped
    ports:
      - 13378:80
    volumes:
      - /bucket/media/books:/audiobooks
      - $APPDATA/audiobookshelf/config:/config
      - $APPDATA/audiobookshelf/metadata:/metadata
    environment:
      - TZ=America/Chicago

volumes:
  jellyfin:
  jellyfinbothwell:
  bothwellvhs:
  vhssnyder:
  immich-model-cache: