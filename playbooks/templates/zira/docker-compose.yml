---
version: "3"
services:

  # plex:
  #   image: linuxserver/plex:1.40.2
  #   restart: unless-stopped
  #   environment:
  #     PUID: 65534
  #     PGID: 1001
  #     VERSION: docker
  #   ports:
  #     - "32400:32400"
  #   volumes:
  #     - /home/riley/b/plex/appdata/plex:/config
  #     - $MEDIA:/media

  gluetun:
    image: qmcgaw/gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp
      - 8388:8388/tcp
      - 8388:8388/udp
      - 8475:8475 # qbt
    volumes:
      - $APPDATA/gluetun:/gluetun
    environment:
      VPN_SERVICE_PROVIDER: private internet access
      VPN_TYPE: openvpn
      OPENVPN_USER: "${VPN_USER}"
      OPENVPN_PASSWORD: "${VPN_PASS}"
      SERVER_REGIONS: Netherlands

  qbt:
    image: lscr.io/linuxserver/qbittorrent:4.6.3
    restart: unless-stopped
    network_mode: "service:gluetun"
    environment:
      PUID: 65534
      PGID: 1001
      UMASK: 000
      TZ: America/Chicago
      WEBUI_PORT: 8475
    volumes:
      - $APPDATA/qbt:/config
      - $SCRATCH_STORAGE/downloads:/downloads
      - $SCRATCH_STORAGE/4k:/4k
      - $MEDIA/movies:/movies
      - $MEDIA/cc:/cc
      - $MEDIA/tv:/tv
      - $MEDIA/syndicated:/syndicated
      - $MEDIA/books:/books
      - $MEDIA/music:/music

  deluge:
    image: linuxserver/deluge:2.1.1
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
      VPN_ENABLED: "no"
    volumes:
      - $APPDATA/deluge:/config
      - $MEDIA/books:/downloads
    ports:
      - "8112:8112"
      - "8118:8118"
      - "58846:58846"
      - "58946:58946"

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    volumes:
    - $SCRATCH_STORAGE/minio:/data
    ports:
    - 9001:9001
    - 9000:9000
    environment:
      MINIO_ROOT_USER: "${MINIO_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_PASSWORD}"
    command: server /data --console-address ":9001"

  node-exporter-textfiles:
    image: quay.io/galexrt/node-exporter-textfiles:v20220922-124518-926
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/lib/node_exporter:/var/lib/node_exporter
    environment:
      - SCRIPT=smartmon.sh
      - OUTPUT_FILENAME=smartmon
      - INTERVAL=300
    command: /entrypoint.sh --by-id

  sonarr:
    image: linuxserver/sonarr:4.0.1
    container_name: sonarr
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      UMASK: 000
      TZ: America/Chicago
    volumes:
      - $APPDATA/sonarr:/config
      - $MEDIA/tv:/tv
      - $SCRATCH_STORAGE/downloads:/downloads
    ports:
      - 7002:8989

  radarr:
    image: linuxserver/radarr:5.2.6
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      UMASK: 000
      TZ: America/Chicago
    volumes:
      - $APPDATA/radarr:/config
      - $MEDIA/movies:/movies
      - $SCRATCH_STORAGE/downloads:/downloads
    ports:
      - 7003:7878

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      PUID: 65534
      PGID: 1001
      TZ: America/Chicago
    volumes:
      - $APPDATA/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  files:
    image: svenstaro/miniserve
    restart: always
    environment:
      MINISERVE_PATH: /tmp
    volumes:
      - $MEDIA:/tmp/media
      - $SCRATCH_STORAGE/downloads:/tmp/downloads
    ports:
      - 8080:8080

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - $MASS/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    # env_file:
    #   - .env
    environment:
      DB_HOSTNAME: immich-database
      REDIS_HOSTNAME: immich-redis
    ports:
      - '2283:2283'
    depends_on:
      - immich-redis
      - immich-database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - immich-model-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${APPDATA}/immich-db:/var/lib/postgresql/data
    restart: always
  
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    restart: unless-stopped
    ports:
      - 13378:80
    volumes:
      - $MEDIA/books:/audiobooks
      - $APPDATA/audiobookshelf/config:/config
      - $APPDATA/audiobookshelf/metadata:/metadata
    environment:
      - TZ=America/Chicago
  
  # jellyfin:
  #   image: jellyfin/jellyfin
  #   container_name: jellyfin
  #   network_mode: 'host'
  #   volumes:
  #     - $APPDATA/jellyfin:/config
  #     - type: bind
  #       source: $SCRATCH_STORAGE/downloads/youtube
  #       target: /media
  #   restart: 'unless-stopped'

  # syncthing:
  #   image: lscr.io/linuxserver/syncthing:latest
  #   container_name: syncthing
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/Chicago
  #   volumes:
  #     - $APPDATA/syncthing:/config
  #     - /bucket/syncthing:/bucket
  #     - $SCRATCH_STORAGE/downloads/syncthing:/scratch
  #   ports:
  #     - 8384:8384
  #     - 22000:22000/tcp
  #     - 22000:22000/udp
  #     - 21027:21027/udp
  #   restart: unless-stopped

  copyparty:
    image: copyparty/ac:latest
    container_name: copyparty
    user: "1000:1000"
    ports:
      - 3923:3923
    volumes:
      - $APPDATA/copyparty:/cfg:z
      - /mass:/mass:z
      - /scratch:/scratch:z

    # enabling mimalloc by replacing "NOPE" with "2" will make some stuff twice as fast, but everything will use twice as much ram:
    environment:
      LD_PRELOAD: /usr/lib/libmimalloc-secure.so.2

    stop_grace_period: 15s  # thumbnailer is allowed to continue finishing up for 10s after the shutdown signal
    healthcheck:
      # hide it from logs with "/._" so it matches the default --lf-url filter
      test: ["CMD-SHELL", "wget --spider -q 127.0.0.1:3923/?reset=/._"]
      interval: 1m
      timeout: 2s
      retries: 5
      start_period: 15s

volumes:
  immich-model-cache:
