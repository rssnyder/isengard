apiVersion: v1
kind: Namespace
metadata:
  name: harness

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: config
  namespace: harness
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  numberOfReplicas: 
  resources:
    requests:
      # https://github.com/longhorn/longhorn/issues/8381
      storage: 4770Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harness
  namespace: harness
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harness
  template:
    metadata:
      labels:
        app: harness
    spec:
      containers:
      - name: harness
        image: harness/harness
        ports:
        - name: http
          containerPort: 3000
        env:
        - name: GITNESS_URL_BASE
          value: https://harness.rileysnyder.dev
        - name: GITNESS_URL_REGISTRY
          value: https://harness.rileysnyder.dev
        - name: GITNESS_REGISTRY_FILESYSTEM_ROOT_DIRECTORY
          value: /data/registry
        volumeMounts:
        - name: data
          mountPath: /data
        - name: docker
          mountPath: /var/run
      - name: dind
        image: docker:dind
        volumeMounts:
        - name: docker
          mountPath: /var/run
        securityContext:
          privileged: true
      volumes:
      - name: data
        persistentVolumeClaim:
            claimName: config
      - name: docker
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: harness
  namespace: harness
spec:
  selector:
    app: harness
  ports:
    - port: 80
      targetPort: http

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harness
  namespace: harness
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    external-dns.alpha.kubernetes.io/hostname: harness.rileysnyder.dev
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - harness.rileysnyder.dev
    secretName: harness-tls
  rules:
    - host: harness.rileysnyder.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  harness
                port:
                  number: 80
