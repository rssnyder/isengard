name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron:  "0 5 * * *" 
  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform"
    concurrency: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        id: fmt
        working-directory: infra/
        run: terraform fmt -check
      
      - uses: rssnyder/ghcr-artifact-store@0.1.0
        with:
          artifact: terraform.tfstate
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Move state
        run: mv terraform.tfstate infra/terraform.tfstate

      - name: Terraform Init
        id: init
        working-directory: infra/
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        working-directory: infra/
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: infra/
        run: terraform plan -no-color
        continue-on-error: true
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        working-directory: infra/
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        working-directory: infra/
        run: terraform apply -auto-approve
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      
      - name: Move state
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: mv infra/terraform.tfstate terraform.tfstate

      - uses: rssnyder/ghcr-artifact-store@0.1.0
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        with:
          method: PUT
          artifact: terraform.tfstate
          token: ${{ secrets.GITHUB_TOKEN }}
